generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique
  password     String
  role         Role
  name         String
  bookmarks    Bookmark[]
  comments     Comment[]
  articles     Article[]
  refreshToken String?
  createdAt    DateTime   @default(now())
}

model Article {
  id          String     @id @default(uuid())
  title       String
  content     String
  featuredImg String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  tags        Tag[]      @relation("ArticleTags")
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  comments    Comment[]
  bookmarks   Bookmark[]
  seoTitle    String
  seoDesc     String
  seoKeywords String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Bookmark {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String
  createdAt DateTime @default(now())

  @@unique([userId, articleId])
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  slug      String    @unique
  articles  Article[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Tag {
  id        String    @id @default(uuid())
  name      String    @unique
  articles  Article[] @relation("ArticleTags")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  GUEST
  REGISTERED
  ADMIN
  EDITOR
}
